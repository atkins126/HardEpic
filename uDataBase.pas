unit uDataBase;

interface

uses uConst;

const
    DBjson = '{'+
        // текущее состояние игры. будет сохраняться/загружаться из отдельного файла
        'state:{'+
            'lang: 0,'+      // текущий язык интерфейса (индекс языка из массива uConst.Lang)
            'day: 0,'+       // текущий игровой день
            'res: 0,'+       // текущее количество ресурсов
            'mp: 0,'+        // текущее количестов маны
            'iq: 0,'+        // текущее количество очков науки
            'res_inc: 0,'+   // прирост ресурса на следующий день
            'mp_inc: 10,'+    // прирост ресурса на следующий день
            'iq_inc: 3,'+    // прирост ресурса на следующий день

            // общие данные локаций
            'location:['+
                '{' +
                    'number: 0,' +      // номер локации
                    'kind: 0,' +        // тип местности
                    'slots: 0,' +       // текущее количество свободных слотов.
                       // вычисляется как slot_max минус size всех привязанных объектов.
                    'slot_max: 0,' +    // общее количество доступных слотов
                       // слоты - место для размещения объектов, но могут быть и массивные юниты
                       // если свободные слоты заканчиваются, в локации не могут
                       // быть помтроены массивные объекты или в нее не могут войти массивные юниты.
                       // у объектов за массивность отвечает параметр SIZE
                '},' +
            '],' +

            /// массив всех объектов, существующих в мире.
            ///  по сути, это большой справочник, где объекты
            ///  ссылаются на номер объекта в массиве локаций.
            'object:['+
                '{' +
                    'location: 0,' +  // в какой локации находится
                    'kind: "",' +      // тип объекта. от него зависит способ интерпритации раздела Data
                    'size: 0,' +      // массивность объекта. занимает ли от место на локации и сколько
                    'data: {'+
                    '},' +
                '},' +
            '],' +

        '},'+

        //
        'object_template:{'+
            obj_volcano+':{' +
                'location: 0,' +  // в какой локации находится
                'kind: "'+obj_volcano+'",' +      // тип объекта. от него зависит способ интерпритации раздела Data
                'size: 0,' +      // массивность объекта. занимает ли от место на локации и сколько
                'data: {'+
                '},' +
            '},' +
        '},' +


        'text:{'+
          'eng:{'+
             // кнопки на экране главного меню
             menu_newgame + ':"NEW BIRTH",'+
             menu_continue + ':"CONTINUE",'+
             menu_language + ':"ENGLISH",'+
             menu_exit + ':"EXIT",'+
             // кнопки
             lbl_map + ':"... MAP ...",'+
             btn_turn + ':"DAY",'+
             lbl_day + ':"Day",'+
             lbl_res + ':"Res.",'+
             lbl_mp + ':"Mana",'+
             lbl_iq + ':"IQ",'+

             obj_volcano + ':"Volcano",'+
          '},'+
          'ru:{'+
             // кнопки на экране главного меню
             menu_newgame + ':"НОВОЕ РОЖДЕНИЕ",'+
             menu_continue + ':"ПРОДОЛЖИТЬ",'+
             menu_language + ':"РУССКИЙ",'+
             menu_exit + ':"ВЫХОД",'+

             lbl_map + ':"... КАРТА ...",'+
             btn_turn + ':"ДЕНЬ",'+
             lbl_day + ':"День",'+
             lbl_res + ':"Рес.",'+
             lbl_mp + ':"Мана",'+
             lbl_iq + ':"Ум",'+

             obj_volcano + ':"Вулкан",'+
          '},'+
        '},'+
    '}';

implementation

end.
